# JSON-backed storage (signatures only; no logic)


from typing import List, Optional
from pathlib import Path
from .models import Habit


class JsonHabitStorage:
    def __init__(self, path: str | Path): ... # TODO: remember file path
    def init(self) -> None: ... # TODO: create file if missing
    def list(self) -> List[Habit]: ... # TODO: load all habits
    def get(self, habit_id: str) -> Optional[Habit]: ...
    def create(self, habit: Habit) -> str: ... # TODO: append + persist
    def update(self, habit: Habit) -> None: ... # TODO: replace by id + persist
    def delete(self, habit_id: str) -> None: ...